# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Backend CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven
      - name: Build with Maven
        run: |
          cd tennis-supplies-backend
          mvn clean package --file pom.xml

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      # Install and start ngrok
      - name: Install Ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          NGROK_AUTH_TOKEN=${{ secrets.NGROK_AUTH_TOKEN }} ./ngrok authtoken $NGROK_AUTH_TOKEN
          NGROK_URL=$(./ngrok http 9000 -log=stdout | grep -Eo "https://[a-z0-9]+\.ngrok\.io")
          echo "::set-env name=NGROK_URL::$NGROK_URL"
          ./ngrok http 9000 &

      # Wait for ngrok to start (adjust sleep duration as needed)
      - name: Wait for Ngrok
        run: sleep 10

      - name: Analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.NGROK_URL }}  # Use ngrok URL dynamically
        run: |
          cd tennis-supplies-backend
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Tennis-supplies-backend -Dsonar.projectName='Tennis supplies backend'
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull source code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven
      - name: Build with Maven
        run: |
          cd tennis-supplies-backend
          mvn clean package -DskipTests --file pom.xml


      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: tennis-supplies-backend
          push: true
          tags: |
            samdebanenman/tennis-supplies:latest-backend